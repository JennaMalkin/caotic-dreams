• All flow control structures in CAOS! (exhaustive)
	• SCRP, ENDM, RSCR
	• DOIF, ENDI
	• SUBR, RETN, GSUB
	• LOOP, UNTL/EVER
	• ENUM/ESEE/ETCH/EPAS, NEXT
	• REPS, REPE
	• INST, SLOW, WAIT (in our system these will be treated like flow controls that change how CAOS code is compiled, but LOCK/UNLK don't need to be)


• All L-Values—ie, writable things you can use SETV on (exhaustive)
	• vaXX
	• ovXX
	• mvXX
	• NAME <>
	• MAME <>
	• GAME <>
	• EAME <>
	• AVAR <>
	• _P1_
	• _P2_
	• FROM ??
	• VELX
	• VELY
	...TODO :D


• All byref "functions" (exhaustive)
	• SETV
	• ADDV
	• ABSV
	• CHAR
	...TODO :D
	
	+ These are important because they're very special in this system!  To make CAOS compatible with a byval system like Java and our CAOS interpreter, we must convert them (in both interpreted and compiled caos!) to a SETx and some expression (eg, ADDV_(decimal) VAR(decimal) SUM(decimal) so ADDV va00 va01 becomes SETV va00 ADDV_ va00 va01).


• Not flow control, just normal functions/commands useful for similar things!
	• CALL
	• MESG WRIT / MESG WRT+
	• CAOS
	• EAMN
	• GAMN
	• NAMN
	• NCLS
	• PCLS
	• PNXT
	• PRAY PREV / PRAY NEXT
	• PRAY BACK / PRAY FORE
	...



• Always does an Implicit SLOW and so compilation treats it as a script-break
	SLOW
	WAIT
	OVER

• Compilation treats it as a script-break even though it doesn't always cause a SLOW  (because sometimes it does!)
	CALL
	CALT
	PAUS
