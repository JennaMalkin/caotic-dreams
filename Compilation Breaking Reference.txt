• Three levels of explicitness available!
	• Compile-to-INST-if-we're-compiling  (using comment directives so the code still works on original creatures)
	• Warn/Error-if-not-compiled  (using comment directives so the code still works on original creatures)
	• *Make the freaking syntax not even backwards incompatible to force it to compile*   (using new flow commands so the code intentionally *doesn't* work on original creatures!)



=== All commands which cause a compilation break even in INST mode (possibly because they stop inst mode XD ) ===
• SLOW
• CALL/CALT/CALA but not CALN

• WAIT
• OVER
• TOUC
• NET: RUSO
• NET: STAT
• NET: WHON



=== Some commands which you might think cause a compilation break, but don't! :D ===
• CALN

• STOP, STOPT, STOPA, STOPN and STPO, STPT, STPA, STPN
	+ It interrupts the agent yes, but in a way that doesn't need to be resumed!  So we can just use "return" in Java! :D

• KILL, KILO, KILN
	+ Same as with STOP :3

• MESG  (https://github.com/Creatures-Developer-Network/c2e-quirks/issues/45)
	+ Even in the original engine, if it was executed in an INST then its effect didn't happen until the next tick!

• PAUS  https://github.com/Creatures-Developer-Network/c2e-quirks/issues/32)
	+ Even in the original engine, if it was executed in an INST then its effect didn't happen until the next tick!
